<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <title>Уровни воды</title>
    <link rel="icon" href="favicon.ico" type="image/x-icon"/>
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon"/>

    <link rel="stylesheet" href="css/main.css">
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link type="text/css" rel="stylesheet" href="css/bootstrap-vue.css"/>

    <script type="text/javascript" src="js-editor/polyfill.min.js"></script>
    <script type="text/javascript" src="js-editor/tether.min.js"></script>
    <script type="text/javascript" src="js-editor/jquery-3.2.1.slim.min.js"></script>
    <script type="text/javascript" src="js-editor/bootstrap.min.js"></script>
    <script type="text/javascript" src="js-editor/api.js"></script>
    <script type="text/javascript" src="js-editor/auth.js"></script>
    <script type="text/javascript" src="js-editor/vue.js"></script>
    <script type="text/javascript" src="js-editor/http-vue-loader.js"></script>
    <script type="text/javascript" src="js-editor/sensors.js"></script>

    <script type="text/javascript" src="js/Chart.bundle.min.js"></script>
    <script type="text/javascript" src="js-editor/bootstrap-vue.js"></script>
    <script type="text/javascript" src="js-editor/vuejs-datepicker.min.js"></script>
    <script type="text/javascript" src="js-editor/moment.min.js"></script>
</head>
<body>

<div id="vue-app">
    <page link="level.htm">
        <div style="margin-left:10px; margin-top: 10px;">
            <h2>Уровни воды</h2>
            <div class="container" style="width: 100%; margin-left: 0; margin-bottom: 15px;">
                <div class="row">
                    <div class="col-1">
                        С даты:
                    </div>
                    <div class="col-2">
                        <datepicker format="yyyy-MM-dd" v-model="fromDate" :clear-button="false"></datepicker>
                    </div>
                </div>
                <div class="row">
                    <div class="col-1">
                        По дату:
                    </div>
                    <div class="col-2">
                        <datepicker format="yyyy-MM-dd" v-model="toDate" :clear-button="false"></datepicker>
                    </div>
                </div>
            </div>
            <table class="table">
                <thead>
                <tr>
                    <td style="width: 10%">Датчик</td>
                    <td style="width: 20%">Оригинальный информер</td>
                    <td style="width: 20%">Считанный график</td>
                    <td style="width: 50%">Реки, для которых используется датчик</td>
                </tr>
                </thead>
                <tr v-for="(data,id) in sensors">
                    <td>
                        <div style="font-weight: bold;">{{id}}</div>
                        <div>{{sensorName(id)}}</div>
                        <div style="margin-top: 10px">
                            <span style="font-weight: bold">Градации уровня:</span>
                            <ul>
                                <li>{{data.sensor_metrics.l0}}</li>
                                <li>{{data.sensor_metrics.l1}}</li>
                                <li>{{data.sensor_metrics.l2}}</li>
                                <li>{{data.sensor_metrics.l3}}</li>
                            </ul>
                        </div>
                    </td>
                    <td>
                        <img :src="'http://gis.vodinfo.ru/informer/draw/v2_' + id + '_400_300_10_ffffff_110_8_7_H_none.png'"/>
                    </td>
                    <td>
                        <canvas :id="canvasId(id)" width="400" height="300"></canvas>
                        <script type="application/javascript">
                        </script>
                    </td>
                    <td>
                        <ul>
                            <li v-for="river in sensors[id].rivers">
                                <a :href="'https://wwmap.ru/editor.htm#' + river.region.country_id +',' + river.region.id + ',' + river.id">{{river.title}}</a>
                            </li>
                        </ul>
                    </td>
                </tr>
            </table>
        </div>
    </page>
</div>

<script type="text/javascript">
    function getSensors(fromDate, toDate) {
        let params = {
            from: fromDate == null ? null : moment(fromDate).format('YYYY-MM-DD'),
            to: toDate == null ? null : moment(toDate).format('YYYY-MM-DD')
        };

        return doGetJsonSync(backendApiBase + "/dashboard/levels?" + jQuery.param(params))
    }

    Vue.component('auth', httpVueLoader('components/auth.vue'));
    Vue.component('page', httpVueLoader('components/page.vue'));
    Vue.component('datepicker', vuejsDatepicker);

    var app = new Vue({
        el: '#vue-app',
        computed: {
            sensors: {
                get: function () {
                    return getSensors(this.fromDate, this.toDate);
                },
            }
        },
        data: {
            fromDate: function () {
                let d = new Date();
                d.setDate(d.getDate() - 10);
                return d;
            }(),
            toDate: new Date(),
            charts: {},
            canvasId: function (id) {
                return 'line' + id
            },
            sensorName: function (id) {
                return sensorsById[parseInt(id)]
            },
            onLoadPlot: function (id) {
                var ctx = document.getElementById(this.canvasId(id)).getContext('2d');
                var chartData = this.sensors[id].chart_data;
                var min = null;
                var max = null;
                for (var i in chartData.datasets[0].data) {
                    var l = chartData.datasets[0].data[i];
                    if (l == null) {
                        continue
                    }
                    if (l < min || min == null) {
                        min = l
                    }
                    if (l > max || max == null) {
                        max = l
                    }
                }
                if (max - min < 120) {
                    var border = (120 - max + min) / 2;
                    max += border;
                    min -= border;
                }
                max = Math.round(max / 10) * 10;
                min = Math.round(min / 10) * 10;

                let existing = this.charts[id];
                if (existing) {
                    existing.data = chartData;
                    existing.options.scales.yAxes[0].ticks.min = min;
                    existing.options.scales.yAxes[0].ticks.max = max;
                    existing.update();
                } else
                    this.charts[id] = new Chart(ctx, {
                        type: 'line',
                        data: chartData,
                        options: {
                            title: {
                                display: true,
                                text: this.sensorName(id)
                            },
                            tooltips: {
                                mode: 'index',
                                intersect: false,
                            },
                            hover: {
                                mode: 'nearest',
                                intersect: true
                            },
                            legend: {
                                display: false,
                            },

                            scales: {
                                xAxes: [{
                                    display: true,
                                    ticks: {
                                        callback: function (dataLabel, index) {
                                            return dataLabel
                                        }
                                    }
                                }],
                                yAxes: [{
                                    ticks: {
                                        stepSize: 10,
                                        min: min,
                                        max: max,
                                    }
                                }]
                            }
                        }
                    });
            }
        },
        updated: function () {
            for (var id in this.sensors) {
                this.onLoadPlot(id);
            }
        }
    })

</script>

</body>
</html>