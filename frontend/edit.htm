<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <title>WWMap</title>
    <link rel="stylesheet" href="css/bootstrap.min.css"/>
    <link rel="stylesheet" href="css/index.css"/>
    <link rel="stylesheet" href="css/vex.css"/>
    <link rel="stylesheet" href="css/vex-theme-default.css"/>
    <link rel="stylesheet" href="css/jquery-te-1.4.0.css"/>
</head>
<body>
<header class="navbar navbar-light navbar-static-top bd-navbar">
    <div class="container">
        <nav>
            <div class="clearfix">
                <button class="navbar-toggler float-xs-right hidden-sm-up" type="button" data-toggle="collapse"
                        data-target="#bd-main-nav" aria-controls="bd-main-nav" aria-expanded="false"
                        aria-label="Toggle navigation"></button>
                <a class="navbar-brand hidden-sm-up" href="/">
                    Home
                </a>
            </div>
            <div class="collapse navbar-toggleable-xs" id="bd-main-nav">
                <ul class="nav navbar-nav">
                    <li class="nav-item">
                        <a class="nav-item nav-link" href="./index.htm"
                           onclick="ga('send', 'event', 'Navbar', 'Community links', 'Bootstrap');">Карта</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-item nav-link" href="./upload.htm"
                           onclick="ga('send', 'event', 'Navbar', 'Community links', 'Bootstrap');">Новая история</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-item nav-link" href="./about.htm"
                           onclick="ga('send', 'event', 'Navbar', 'Community links', 'Bootstrap');">О проекте</a>
                    </li>
                </ul>
            </div>
        </nav>
    </div>
</header>

<h2 id="pageTitle">Трек без названия</h2>
<div style="height: 30px;"></div>
<div class="container-fluid">
    <div class="row">
        <div class="col-sm-8">
            <div id="map" style="witdh:800px; height: 400px; margin: 10px;"></div>
        </div>
        <div class="col-sm-4">
            <ul id="tracks" class="trackMenu"></ul>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-11">
            <div id="articles" class="articles-container">

            </div>
        </div>
    </div>
</div>

<div id="article-editor" style="display: none;">
    <textarea name="article" class="editorEx"></textarea>
</div>

<script type="text/javascript" src="./js/jquery-3.1.1.min.js"></script>
<script type="text/javascript" src="./js/jquery.tmpl.js"></script>
<script type="text/javascript" src="./js/tether.min.js"></script>
<script type="text/javascript" src="./js/bootstrap.min.js"></script>
<script type="text/javascript" src="./js/jquery.cookie.js"></script>
<script type="text/javascript" src="./js/jquery.json.js"></script>
<script type="text/javascript" src="./js/vex.combined.min.js"></script>
<script type="text/javascript" src="./js/jquery-te-1.4.0.min.js"></script>

<script type="text/javascript" src="http://jqueryte.com/js/jquery.snippet.min.js" charset="utf-8"></script>
<script type="text/javascript" src="http://jqueryte.com/js/site.js" charset="utf-8"></script>

<script type="text/javascript" src="https://api-maps.yandex.ru/2.1/?lang=tr_TR"></script>
<script type="text/javascript">
    $.urlParam = function (name) {
        var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
        return results[1] || 0;
    };

    const apiBase = "http://localhost:7007";
    const id = $.urlParam('id');

    const PHOTO = 'photo';
    const VIDEO = 'video';
    const POST = 'post';


    ymaps.ready(init);
    var myMap;
    var objectManager;

    vex.defaultOptions.className = 'vex-theme-default'

    function init() {
        myMap = new ymaps.Map("map", {
            center: [55.76, 37.64],
            zoom: 8,
            controls: ["zoomControl", "fullscreenControl"]
        });

        $.get(apiBase + '/track-editor-page?id=' + id, function (data) {
            page = $.parseJSON(data);
            $('#pageTitle').html(page.title);
            myMap.setBounds(page.trackBounds);
            for (var i in page.eventPoints) {
                var articleHtml;
                var eventPointId = page.eventPoints[i].id;
                var content = page.eventPoints[i].content;
                var type = page.eventPoints[i].type;
                switch (type) {
                    case VIDEO:
                        articleHtml = mkVideoHtml(eventPointId, content)
                        break;
                    case PHOTO:
                        articleHtml = mkPhotoHtml(eventPointId, content)
                        break;
                    case POST:
                        articleHtml = mkPostHtml(eventPointId, content)
                        break
                }
                $('#articles').append(articleHtml);
            }
        });

        myMap.events.add('click', showMapMenu);
        myMap.events.add('contextmenu', showMapMenu);

        objectManager = new ymaps.LoadingObjectManager(apiBase + '/single-track-tile?id=' + id, {
            geoObjectHasBalloon: false,
            splitRequests: true,
            geoObjectStrokeWidth: 3
        });
        addContextMenu(objectManager);


        myMap.geoObjects.add(objectManager);

    }

    function showMapMenu(e) {
        var coords = e.get('coords');

        vex.dialog.open({
                    buttons: [
                        $.extend({}, vex.dialog.buttons.YES, {text: 'Фото', click: vexButtonVal(PHOTO)}),
                        $.extend({}, vex.dialog.buttons.YES, {text: 'Видео', click: vexButtonVal(VIDEO)}),
                        $.extend({}, vex.dialog.buttons.YES, {
                            text: 'Запись',
                            click: vexButtonVal(POST),
                            className: 'vex-dialog-button-primary'
                        })
                    ],
                    callback: function (type) {
                        if (!type) {
                            return
                        }
                        switch (type) {
                            case PHOTO:
                                vex.dialog.prompt({
                                    placeholder: 'Прямая ссылка на фото в интернете',
                                    callback: function (value) {
                                        if (value) {
                                            addObject(coords, value, type, "")
                                        }
                                    }
                                });
                                break;
                            case VIDEO:
                                vex.dialog.prompt({
                                    placeholder: 'Ссылка на youtube',
                                    callback: function (value) {
                                        if (value) {
                                            addObject(coords, value, type, "")
                                        }
                                    }
                                });
                                break;
                            case POST:
                                vex.dialog.open({
                                    input: '<textarea name="article" class="editorEx"></textarea>',
                                    callback: function (articleData) {
                                        if (articleData) {
                                            addObject(coords, articleData['article'], type, "")
                                        }
                                    },
                                    contentClassName: 'vex-wide'
                                });
                                $(".editorEx").jqte();
                                break;
                            default:
                                vex.dialog.alert('Это ещё не сделано!')
                        }
                    }
                }
        );
    }

    function addObject(coords, content, type, title) {
        $.post(apiBase + '/point', {
            track_id: id,
            type: type,
            title: title,
            content: content,
            point: JSON.stringify(coords)
        }, function (eventPointId) {
            // this workaround used to prevent data reload on placemark add.
            // there is screen flicker on data reload
            var placemark = new ymaps.Placemark(coords, {
                id: eventPointId
            }, {});
            var articleHtml;

            switch (type) {
                case VIDEO:
                    placemark.options.set({preset: 'islands#blueVideoIcon'});
                    articleHtml = mkVideoHtml(eventPointId, content)
                    break;
                case PHOTO:
                    placemark.options.set({preset: 'islands#blueVegetationIcon'});
                    articleHtml = mkPhotoHtml(eventPointId, content)
                    break;
                case POST:
                    placemark.options.set({preset: 'islands#blueBookIcon'});
                    articleHtml = mkPostHtml(eventPointId, content)
                    break
            }
            addContextMenu(placemark);
            myMap.geoObjects.add(placemark);

            $('#articles').append(articleHtml);
        });
    }

    function mkPostHtml(id, content) {
        return '<p id="article' + id + '">' + content + '</p>';
    }

    function mkPhotoHtml(id, content) {
        return '<p id="article' + id + '"><img src="' + content + '"/></p>';
    }

    function mkVideoHtml(id, content) {
        return '<p id="article' + id + '">Not supported yet</p>';
    }

    function vexButtonVal(val) {
        return function ($vexContent, event) {
            this.value = val;
            this.close();
        };
    }

    function addContextMenu(obj) {
        // Контекстное меню, позволяющее изменить параметры метки.
        // Вызывается при нажатии правой кнопкой мыши на метке.
        obj.events.add('contextmenu', showContextMenu);
        obj.events.add('click', showContextMenu);
    }

    function showContextMenu(e) {
        placemark = e.get("target");
        // Если меню метки уже отображено, то убираем его.
        if ($('#menu').css('display') == 'block') {
            $('#menu').remove();
        } else {
            // HTML-содержимое контекстного меню.
            var menuContent =
                    '<div id="menu">\
                    <div align="center"><input type="submit" value="Удалить"/></div>\
                    </div>';

            // Размещаем контекстное меню на странице
            $('body').append(menuContent);

            // Задаем позицию меню.
            $('#menu').css({
                left: e.get('pagePixels')[0],
                top: e.get('pagePixels')[1]
            });

            $('#menu input[type="submit"]').click(function () {
                // id of object loaded by object manager
                var objectManagerPlacemarkId = e.get("objectId");
                var newlyCreatedPlacemarkId = placemark.properties ? placemark.properties.get("id") : null;
                var placemarkId = objectManagerPlacemarkId ? objectManagerPlacemarkId : newlyCreatedPlacemarkId;

                $.ajax({
                    url: apiBase + '/point?id=' + placemarkId,
                    type: 'DELETE',
                    success: function (result) {
                        if (newlyCreatedPlacemarkId) {
                            myMap.geoObjects.remove(placemark);
                        }
                        if (objectManagerPlacemarkId) {
                            objectManager.reloadData();
                        }
                        $('#article' + placemarkId).remove()
                    }
                });
                $('#menu').remove();
            });
        }
    }
</script>
</body>
</html>
